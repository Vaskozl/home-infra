apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: gitea
  annotations:
    kubernetes.io/tls-acme: "true"
    kubernetes.io/ingress.class: "internal"
    nginx.ingress.kubernetes.io/auth-url: "https://gate.sko.ai/api/verify"
    nginx.ingress.kubernetes.io/auth-signin: "https://gate.sko.ai/"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      auth_request_set $user $upstream_http_remote_user;
      auth_request_set $groups $upstream_http_remote_groups;
      proxy_set_header Remote-User $user;
      proxy_set_header Remote-Groups $groups;
spec:
  rules:
  - host: git.sko.ai
    http:
      paths:
      - backend:
          serviceName: gitea
          servicePort: http
        path: /
  tls:
  - hosts:
    - git.sko.ai
    secretName: ingress-cert-git
---
apiVersion: v1
kind: Service
metadata:
  name: gitea
spec:
  ports:
  - protocol: TCP
    port: 3000
    targetPort: 3000
    name: http
  - protocol: TCP
    port: 22
    targetPort: 22
    name: ssh
  selector:
    app: gitea
  type: LoadBalancer
  loadBalancerIP: 192.168.1.21
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gitea
spec:
  replicas: 2
  selector:
    matchLabels:
      app: gitea
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: gitea
    spec:
      containers:
      - image: gitea/gitea:1.13.1
        name: gitea
        env:
        ports:
        - containerPort: 3000
          name: http
        - containerPort: 22
          name: ssh
        volumeMounts:
        - name: data
          mountPath: /data
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: gitea-pvc
