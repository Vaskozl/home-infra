---

# # Enable this if you run into issues updating
# - name: Reset dpkg
#   command: dpkg --configure -a


- name: Add automatic fancontrol script
  copy:
    src: fancontrol.py
    dest: "/usr/bin/fancontrol.py"
    group: "root"
    owner: "root"
    mode: 0755

- name: Add automatic fancontrol service
  copy:
    src: fancontrol.service
    dest: "/etc/systemd/system/fancontrol.service"
    group: "root"
    owner: "root"
    mode: 0644

- name: Enable the fancontrol
  service:
    name: fancontrol
    enabled: yes
    state: restarted

# Contains log2ram, docker-ctop, bpytop
- name: Add log2ram deb key.
  apt_key:
    id: 98B824A5FA7D3A10FDB225B7CA548A0A0312D8E6
    url: https://azlux.fr/repo.gpg.key
    state: present

- name: Add log2ram deb repo
  apt_repository:
    repo: deb http://packages.azlux.fr/debian/ buster main
    filename: azlux
    state: present

- name: Upgrade system
  apt:
    upgrade: dist
    # Need the force_apt_get until
    # https://github.com/ansible/ansible/issues/56832
    force_apt_get: true
  register: apt_upgrade
  retries: 5
  until: apt_upgrade is success

- name: Upgrade all packages to the latest version
  apt:
    name: "*"
    state: latest
    # Need the force_apt_get until
    # https://github.com/ansible/ansible/issues/56832
    force_apt_get: true
  register: apt_update
  retries: 5
  until: apt_update is success


- name: Install Common Packages
  apt:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - dnsutils
      - git
      - gnupg2
      - hdparm
      - htop
      - iputils-ping
      - libnss-mdns
      - neofetch
      - net-tools
      - nfs-common
      - nmap
      - psmisc
      - python3
      - python3-pip
      - python3-piozero
      - rsync
      - software-properties-common
      - traceroute
      - unattended-upgrades
      - wget
      - log2ram
      - bpytop
    install_recommends: false
    update_cache: true
    # Need the force_apt_get until
    # https://github.com/ansible/ansible/issues/56832
    force_apt_get: true
  register: apt_install_common
  retries: 5
  until: apt_install_common is success

- name: Clean up apt
  apt:
    autoremove: true
    # Need the force_apt_get until
    # https://github.com/ansible/ansible/issues/56832
    force_apt_get: true

- name: Copy unattended-upgrades configuration files in place
  copy:
    src: "{{ item }}"
    dest: "/etc/apt/apt.conf.d/{{ item }}"
    owner: root
    group: root
    mode: 0644
  with_items:
    - 10periodic
    - 50unattended-upgrades

# See: https://github.com/kubernetes/kubernetes/issues/71305
- name: Use iptables-legacy instead of nftables.
  alternatives:
    name: iptables
    path: /usr/sbin/iptables-legacy

- name: Restart systemd-timesyncd service
  systemd:
    name: systemd-timesyncd
    enabled: true
    state: restarted

- name: Enable systemd-timesyncd service and assure it is started
  systemd:
    name: systemd-timesyncd
    enabled: true
    state: started

- name: Stop log2ram service
  systemd:
    name: log2ram
    enabled: true
  ignore_errors: true

- name: Copy log2ram.conf
  template:
    src: log2ram.conf.j2
    dest: /etc/log2ram.conf

- name: Create a firmware folder if it does not exist
  file:
    path: /boot/firmware
    state: directory
    mode: '0755'

- name: Create the config files if they do not exist
  file:
    path: "{{ item }}"
    state: touch
  with_items:
    - /boot/firmware/cmdline.txt
    - /boot/firmware/syscfg.txt

- name: Enable required cgroup features and disable IPv6
  lineinfile:
    path: /boot/firmware/cmdline.txt
    backrefs: true
    regexp: '^(.*fixrtc)$'
    line: '\1 cgroup_memory=1 cgroup_enable=memory'
    state: present
  when: deploy_target != 'vagrant'

- name: Disable WiFi
  blockinfile:
    path: /boot/firmware/syscfg.txt
    marker: "# {mark} ANSIBLE DISABLE WIFI"
    block: |
      dtoverlay=pi3-disable-wifi
  when: deploy_target != 'vagrant'

- name: Disable Bluetooth
  blockinfile:
    path: /boot/firmware/syscfg.txt
    marker: "# {mark} ANSIBLE DISABLE BLUETOOTH"
    block: |
      dtoverlay=pi3-disable-bt
  when: deploy_target != 'vagrant'

- name: Disable HDMI
  blockinfile:
    path: /boot/firmware/syscfg.txt
    marker: "# {mark} ANSIBLE DISABLE HDMI"
    block: |
      hdmi_blanking=2
  when: deploy_target != 'vagrant'

- name: Disable Audio
  blockinfile:
    path: /boot/firmware/syscfg.txt
    marker: "# {mark} ANSIBLE DISABLE AUDIO"
    block: |
      dtparam=audio=off
  when: deploy_target != 'vagrant'

- name: Disable Uart
  blockinfile:
    path: /boot/firmware/syscfg.txt
    marker: "# {mark} ANSIBLE DISABLE UART"
    block: |
      enable_uart=0
  when: deploy_target != 'vagrant'

- name: Trottle GPU
  blockinfile:
    path: /boot/firmware/syscfg.txt
    marker: "# {mark} ANSIBLE THROTTLE GPU"
    block: |
      gpu_mem=16
  when: deploy_target != 'vagrant'

- name: Overclock CPU
  blockinfile:
    path: /boot/firmware/syscfg.txt
    marker: "# {mark} ANSIBLE OVERCLOCK CPU"
    block: |
      over_voltage=0
      arm_freq=1500
  when: deploy_target != 'vagrant'
